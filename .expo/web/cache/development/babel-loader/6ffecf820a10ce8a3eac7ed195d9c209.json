{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar API_URL = 'https://myworktimetracker.herokuapp.com';\nexport var AuthContext = createContext();\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userInfo = _useState4[0],\n      setUserInfo = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userId = _useState6[0],\n      setUserId = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      userName = _useState8[0],\n      setUserName = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      userData = _useState10[0],\n      setUserData = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      error = _useState12[0],\n      setError = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      userEmail = _useState14[0],\n      setUserEmail = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      myTotalHours = _useState16[0],\n      setTotalHours = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      myTotalMoney = _useState18[0],\n      setTotalMoney = _useState18[1];\n\n  var Login = function Login(userName, password) {\n    setLoading(true);\n    var payload = {\n      userName: userName,\n      password: password\n    };\n    fetch(API_URL + \"/apilogin\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    }).then(function () {\n      var _ref2 = _asyncToGenerator(function* (res) {\n        var jsonRes = yield res.json();\n\n        if (jsonRes.Status === \"Error\") {\n          Alert.alert(\"User was not found\");\n          setError(true);\n          setLoading(false);\n        } else if (jsonRes.Status === \"Ok\") {\n          try {\n            var data = jsonRes.User;\n            console.log(data);\n\n            for (i in data) {\n              var obj = {\n                id: data[i].userId,\n                userName: data[i].userName,\n                userEmail: data[i].userEmail,\n                usersWage: data[i].usersWage,\n                usersDeduction: data[i].usersDeduction,\n                usersOvertime: data[i].usersOvertime\n              };\n              AsyncStorage.setItem('userId', \"\" + obj.id);\n              AsyncStorage.setItem('userName', \"\" + obj.userName);\n              AsyncStorage.setItem('userEmail', \"\" + obj.userEmail);\n              console.log();\n            }\n          } catch (error) {\n            console.log(error);\n            setLoading(false);\n          }\n        }\n      });\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  };\n\n  var LogOut = function LogOut() {\n    try {\n      setLoading(true);\n      AsyncStorage.removeItem('userId');\n      AsyncStorage.removeItem('userName');\n      AsyncStorage.removeItem('userEmail');\n      setUserInfo({});\n      setLoading(false);\n      console.log(\"User has been logged off\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  var CheckIfUserIsLoggedIn = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var jsonValue = yield AsyncStorage.getItem('userId');\n        var name = yield AsyncStorage.getItem('userName');\n        var email = yield AsyncStorage.getItem('userEmail');\n        setUserId(jsonValue);\n        setUserName(name);\n        setUserEmail(email);\n      } catch (e) {}\n    });\n\n    return function CheckIfUserIsLoggedIn() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var FetchData = function FetchData(id) {\n    var payload = {\n      'id': Number(id)\n    };\n    var customHeaders = {\n      \"Content-Type\": \"application/json\"\n    };\n    fetch(API_URL + \"/api/GetUserHours\", {\n      method: \"POST\",\n      headers: customHeaders,\n      body: JSON.stringify(payload)\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      setUserData(data.Hours);\n      setTotalHours(data.TotalHours);\n      setTotalMoney(data.TotalMoney);\n    });\n  };\n\n  return _jsx(AuthContext.Provider, {\n    value: {\n      isLoading: isLoading,\n      userInfo: userInfo,\n      userId: userId,\n      userName: userName,\n      userEmail: userEmail,\n      userData: userData,\n      myTotalHours: myTotalHours,\n      myTotalMoney: myTotalMoney,\n      Login: Login,\n      LogOut: LogOut,\n      CheckIfUserIsLoggedIn: CheckIfUserIsLoggedIn,\n      FetchData: FetchData\n    },\n    children: children\n  });\n};","map":{"version":3,"sources":["C:/Users/palr1/OneDrive/Documents/GitHub/TimeTrackerReactNative/context/authContext.js"],"names":["React","createContext","useState","axios","AsyncStorage","API_URL","AuthContext","AuthProvider","children","isLoading","setLoading","userInfo","setUserInfo","userId","setUserId","userName","setUserName","userData","setUserData","error","setError","userEmail","setUserEmail","myTotalHours","setTotalHours","myTotalMoney","setTotalMoney","Login","password","payload","fetch","method","headers","body","JSON","stringify","then","res","jsonRes","json","Status","Alert","alert","data","User","console","log","i","obj","id","usersWage","usersDeduction","usersOvertime","setItem","LogOut","removeItem","message","CheckIfUserIsLoggedIn","jsonValue","getItem","name","email","e","FetchData","Number","customHeaders","response","Hours","TotalHours","TotalMoney"],"mappings":"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","sourcesContent":["import React, {createContext, useState} from 'react';\r\nimport { Alert } from 'react-native';\r\nimport axios from 'axios';\r\n// import BASE_URL from '../src/config'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nconst API_URL = 'https://myworktimetracker.herokuapp.com'\r\n\r\nexport const AuthContext = createContext();\r\n\r\n\r\nexport const AuthProvider = ({children}) =>{\r\n\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [userInfo, setUserInfo] = useState({});\r\n  const [userId, setUserId] = useState({})\r\n  const [userName, setUserName] = useState('')\r\n  const [userData, setUserData] = useState(null)\r\n  const [error, setError] = useState(false)\r\n  const [userEmail, setUserEmail] = useState('')\r\n  const [myTotalHours, setTotalHours] = useState(null)\r\n  const [myTotalMoney, setTotalMoney] = useState(null)\r\n\r\n\r\n  const Login = (userName, password) => {\r\n    setLoading(true)\r\n\r\n    const payload = {\r\n      userName:userName,\r\n      password:password\r\n    }\r\n\r\n   fetch(`${API_URL}/apilogin`, {\r\n     method:\"POST\",\r\n     headers:{\r\n       'Content-Type': 'application/json',\r\n     },\r\n     body:JSON.stringify(payload)\r\n   })\r\n   .then(async res =>{\r\n\r\n    let jsonRes = await res.json()\r\n    if(jsonRes.Status === \"Error\") {\r\n      Alert.alert(\"User was not found\")\r\n      setError(true)\r\n      setLoading(false)\r\n    }\r\n\r\n    else if (jsonRes.Status === \"Ok\") {\r\n      try {\r\n        let data = jsonRes.User\r\n        console.log(data)\r\n\r\n        for(i in data) {\r\n          let obj ={\r\n            id:data[i].userId,\r\n            userName:data[i].userName,\r\n            userEmail:data[i].userEmail,\r\n            usersWage:data[i].usersWage,\r\n            usersDeduction:data[i].usersDeduction,\r\n            usersOvertime:data[i].usersOvertime\r\n          }\r\n          AsyncStorage.setItem('userId', `${obj.id}`)\r\n          AsyncStorage.setItem('userName', `${obj.userName}`)\r\n          AsyncStorage.setItem('userEmail', `${obj.userEmail}`);\r\n          console.log()\r\n          //make a auth token \r\n        }\r\n\r\n        \r\n        \r\n      } catch (error) {\r\n        console.log(error)\r\n        setLoading(false)\r\n        \r\n      }\r\n    }\r\n   })\r\n  }\r\n\r\n  const LogOut = () =>{\r\n    //logout function in api in my website\r\n    try {\r\n      setLoading(true)\r\n      // AsyncStorage.removeItem('userInfo')\r\n      AsyncStorage.removeItem('userId')\r\n      AsyncStorage.removeItem('userName')\r\n      AsyncStorage.removeItem('userEmail')\r\n      setUserInfo({})\r\n      setLoading(false)\r\n      console.log(\"User has been logged off\")\r\n      \r\n    } catch (error) {\r\n      console.log(error.message)\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  const CheckIfUserIsLoggedIn = async() =>{\r\n    try {\r\n      const jsonValue = await AsyncStorage.getItem('userId')\r\n      const name = await AsyncStorage.getItem('userName')\r\n      const email = await AsyncStorage.getItem('userEmail');\r\n      setUserId(jsonValue)\r\n      setUserName(name)\r\n      setUserEmail(email)\r\n      \r\n      // return jsonValue != null ? JSON.parse(jsonValue) : null\r\n    } catch(e) {\r\n      // read error\r\n    }\r\n  }\r\n\r\n\r\n  //what info should i get from the user?\r\n  //get all hours from user with userId\r\n  //but to make it secure we need to make a jwt with the user id and username\r\n  //but for now just use the userId to test the Api\r\n  //example baseUrl/api/getUserHours/token=token here\r\n  //validate the token and verify its data\r\n  \r\n  //I think i can make a post method to make it more secure, i can post the user id and get the data\r\n\r\n  \r\n  const FetchData = (id) =>{\r\n    // fetch(`${API_URL}/api/getUserHours/${id}`).then(res => res.json()).then(data => setUserData(data))\r\n    let payload = {\r\n      'id':Number(id)\r\n    }\r\n\r\n    const customHeaders = {\r\n      \"Content-Type\": \"application/json\",\r\n  }\r\n\r\n    fetch(`${API_URL}/api/GetUserHours`, {\r\n      method: \"POST\",\r\n      headers:customHeaders,\r\n      body: JSON.stringify(payload),\r\n  })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n          setUserData(data.Hours)\r\n          \r\n          setTotalHours(data.TotalHours)\r\n          setTotalMoney(data.TotalMoney)\r\n          // console.log(`Total Hours ${myTotalHours} - Total Money ${myTotalMoney}`)\r\n      });\r\n  }\r\n\r\n\r\n  \r\n\r\n\r\n  return(\r\n    <AuthContext.Provider  value={{\r\n      isLoading,\r\n      userInfo,\r\n      userId,\r\n      userName,\r\n      userEmail,\r\n      userData,\r\n      myTotalHours,\r\n      myTotalMoney,\r\n      Login,\r\n      LogOut,\r\n      CheckIfUserIsLoggedIn,\r\n      FetchData\r\n      \r\n      \r\n\r\n      \r\n      \r\n    }} >{children}</AuthContext.Provider>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}