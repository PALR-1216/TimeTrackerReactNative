{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { React, useState, useContext } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport LottieView from 'lottie-react-native';\nimport { AuthContext } from \"../context/authContext\";\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginView = function LoginView() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useContext = useContext(AuthContext),\n      isLoading = _useContext.isLoading,\n      Login = _useContext.Login;\n\n  return _jsxs(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      hidden: true\n    }), _jsx(Spinner, {\n      visible: isLoading\n    }), _jsx(LottieView, {\n      autoPlay: true,\n      style: {\n        width: 200,\n        height: 200\n      },\n      source: require(\"../assets/Lottie/78969-money.json\")\n    }), _jsx(Text, {\n      style: styles.Logo,\n      children: \"Work Tracker\"\n    }), _jsx(TextInput, {\n      placeholder: \"Enter userName\",\n      style: styles.input,\n      value: userName,\n      onChangeText: function onChangeText(text) {\n        return setUserName(text);\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Enter password\",\n      secureTextEntry: true,\n      style: styles.input,\n      value: password,\n      onChangeText: function onChangeText(pass) {\n        return setPassword(pass);\n      }\n    }), _jsx(Button, {\n      title: \"Login\",\n      style: styles.logInBtn,\n      onPress: function onPress() {\n        if (!userName) {\n          Alert.alert(\"Please enter credentials\");\n        } else if (!password) {\n          Alert.alert(\"Please enter credentials\");\n        } else {\n          Login(userName, password);\n        }\n      }\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ecf0f1'\n  },\n  input: {\n    width: 220,\n    height: 44,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: 'black',\n    marginBottom: 10,\n    borderRadius: 5\n  },\n  Logo: {\n    fontSize: 40,\n    margin: 45,\n    letterSpacing: 2\n  }\n});\nexport default LoginView;","map":{"version":3,"sources":["C:/Users/palr1/OneDrive/Documents/GitHub/TimeTrackerReactNative/Screens/LoginView.js"],"names":["React","useState","useContext","LottieView","AuthContext","Spinner","LoginView","userName","setUserName","password","setPassword","isLoading","Login","Platform","OS","styles","container","width","height","require","Logo","input","text","pass","logInBtn","Alert","alert","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","padding","borderWidth","borderColor","marginBottom","borderRadius","fontSize","margin","letterSpacing"],"mappings":"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","sourcesContent":["import { React, useState , useContext} from 'react';\r\nimport { Text, View, StyleSheet, TextInput, Button,Alert , StatusBar, KeyboardAvoidingView} from 'react-native';\r\nimport LottieView from 'lottie-react-native';\r\nimport {AuthContext} from '../context/authContext'\r\nimport Spinner from 'react-native-loading-spinner-overlay';\r\n\r\n\r\nconst LoginView = () => {\r\n  const [userName, setUserName] = useState(null);\r\n  const [password, setPassword] = useState(null);\r\n  const {isLoading ,Login} = useContext(AuthContext)\r\n  return (\r\n   \r\n    <KeyboardAvoidingView  behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"} style={styles.container}>\r\n    <StatusBar hidden={true}/>\r\n    <Spinner visible={isLoading}/>\r\n    <LottieView\r\n    autoPlay\r\n    style={{width:200, height:200}}\r\n    source={require('../assets/Lottie/78969-money.json')}\r\n    \r\n    />\r\n    <Text style={styles.Logo}>Work Tracker</Text>\r\n      <TextInput\r\n        placeholder=\"Enter userName\"\r\n        style={styles.input}\r\n        value={userName}\r\n        onChangeText={(text) => setUserName(text)}\r\n      />\r\n      \r\n      <TextInput\r\n        placeholder=\"Enter password\"\r\n        secureTextEntry\r\n        style={styles.input}\r\n        value={password}\r\n        onChangeText={(pass) => setPassword(pass)}\r\n      />\r\n      <Button title=\"Login\" style={styles.logInBtn}  onPress={() => {\r\n\r\n        if(!userName) {\r\n          Alert.alert(\"Please enter credentials\")\r\n        }\r\n\r\n        else if(!password) {\r\n          Alert.alert(\"Please enter credentials\")\r\n        }\r\n       \r\n        else  {\r\n          //Log user here\r\n          Login(userName, password);\r\n        }\r\n\r\n        \r\n        \r\n      }}/>\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  \r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#ecf0f1',\r\n    // marginTop:-220\r\n  },\r\n  input: {\r\n    width: 220,\r\n    height: 44,\r\n    padding: 10,\r\n    borderWidth: 1,\r\n    borderColor: 'black',\r\n    marginBottom: 10,\r\n    borderRadius:5\r\n  },\r\n\r\n\r\n\r\n  Logo:{\r\n    fontSize:40,\r\n    margin:45,\r\n    letterSpacing:2,\r\n    // fontWeight:'bold'\r\n  }\r\n});\r\n\r\nexport default LoginView;\r\n"]},"metadata":{},"sourceType":"module"}