{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { React, useState, useContext } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { AuthContext } from \"../context/authContext\";\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginView = function LoginView() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useContext = useContext(AuthContext),\n      isLoading = _useContext.isLoading,\n      Login = _useContext.Login;\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      hidden: true\n    }), _jsx(Spinner, {\n      visible: isLoading\n    }), _jsx(TextInput, {\n      placeholder: \"Enter userName\",\n      style: styles.input,\n      value: userName,\n      onChangeText: function onChangeText(text) {\n        return setUserName(text);\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Enter password\",\n      secureTextEntry: true,\n      style: styles.input,\n      value: password,\n      onChangeText: function onChangeText(pass) {\n        return setPassword(pass);\n      }\n    }), _jsx(Button, {\n      title: \"Login\",\n      style: styles.input,\n      onPress: function onPress() {\n        if (!userName) {\n          Alert.alert(\"Please enter credentials\");\n        } else if (!password) {\n          Alert.alert(\"Please enter credentials\");\n        } else {\n          Login(userName, password);\n        }\n      }\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ecf0f1'\n  },\n  input: {\n    width: 200,\n    height: 44,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: 'black',\n    marginBottom: 10\n  }\n});\nexport default LoginView;","map":{"version":3,"sources":["/Users/pedroalejandro/Desktop/TimeTrackerReactNative/Screens/LoginView.js"],"names":["React","useState","useContext","AuthContext","Spinner","LoginView","userName","setUserName","password","setPassword","isLoading","Login","styles","container","input","text","pass","Alert","alert","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","width","height","padding","borderWidth","borderColor","marginBottom"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA2BC,UAA3B,QAA4C,OAA5C;;;;;;;;AAEA,SAAQC,WAAR;AACA,OAAOC,OAAP,MAAoB,sCAApB;;;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,kBAAgCJ,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOK,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgCN,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOO,QAAP;AAAA,MAAiBC,WAAjB;;AACA,oBAA2BP,UAAU,CAACC,WAAD,CAArC;AAAA,MAAOO,SAAP,eAAOA,SAAP;AAAA,MAAkBC,KAAlB,eAAkBA,KAAlB;;AACA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,eACA,KAAC,SAAD;AAAW,MAAA,MAAM,EAAE;AAAnB,MADA,EAGA,KAAC,OAAD;AAAS,MAAA,OAAO,EAAEH;AAAlB,MAHA,EAIE,KAAC,SAAD;AACE,MAAA,WAAW,EAAC,gBADd;AAEE,MAAA,KAAK,EAAEE,MAAM,CAACE,KAFhB;AAGE,MAAA,KAAK,EAAER,QAHT;AAIE,MAAA,YAAY,EAAE,sBAACS,IAAD;AAAA,eAAUR,WAAW,CAACQ,IAAD,CAArB;AAAA;AAJhB,MAJF,EAWE,KAAC,SAAD;AACE,MAAA,WAAW,EAAC,gBADd;AAEE,MAAA,eAAe,MAFjB;AAGE,MAAA,KAAK,EAAEH,MAAM,CAACE,KAHhB;AAIE,MAAA,KAAK,EAAEN,QAJT;AAKE,MAAA,YAAY,EAAE,sBAACQ,IAAD;AAAA,eAAUP,WAAW,CAACO,IAAD,CAArB;AAAA;AALhB,MAXF,EAkBE,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,KAAK,EAAEJ,MAAM,CAACE,KAApC;AAA4C,MAAA,OAAO,EAAE,mBAAM;AAEzD,YAAG,CAACR,QAAJ,EAAc;AACZW,UAAAA,KAAK,CAACC,KAAN,CAAY,0BAAZ;AACD,SAFD,MAIK,IAAG,CAACV,QAAJ,EAAc;AACjBS,UAAAA,KAAK,CAACC,KAAN,CAAY,0BAAZ;AACD,SAFI,MAIC;AAEJP,UAAAA,KAAK,CAACL,QAAD,EAAWE,QAAX,CAAL;AACD;AAIF;AAjBD,MAlBF;AAAA,IADF;AAuCD,CA3CD;;AA6CA,IAAMI,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,eAAe,EAAE;AAJR,GADoB;AAO/BV,EAAAA,KAAK,EAAE;AACLW,IAAAA,KAAK,EAAE,GADF;AAELC,IAAAA,MAAM,EAAE,EAFH;AAGLC,IAAAA,OAAO,EAAE,EAHJ;AAILC,IAAAA,WAAW,EAAE,CAJR;AAKLC,IAAAA,WAAW,EAAE,OALR;AAMLC,IAAAA,YAAY,EAAE;AANT;AAPwB,CAAlB,CAAf;AAiBA,eAAezB,SAAf","sourcesContent":["import { React, useState , useContext} from 'react';\nimport { Text, View, StyleSheet, TextInput, Button,Alert , StatusBar} from 'react-native';\nimport {AuthContext} from '../context/authContext'\nimport Spinner from 'react-native-loading-spinner-overlay';\nconst LoginView = () => {\n  const [userName, setUserName] = useState(null);\n  const [password, setPassword] = useState(null);\n  const {isLoading, Login} = useContext(AuthContext)\n  return (\n    <View style={styles.container}>\n    <StatusBar hidden={true}/>\n\n    <Spinner visible={isLoading}/>\n      <TextInput\n        placeholder=\"Enter userName\"\n        style={styles.input}\n        value={userName}\n        onChangeText={(text) => setUserName(text)}\n      />\n      \n      <TextInput\n        placeholder=\"Enter password\"\n        secureTextEntry\n        style={styles.input}\n        value={password}\n        onChangeText={(pass) => setPassword(pass)}\n      />\n      <Button title=\"Login\" style={styles.input}  onPress={() => {\n\n        if(!userName) {\n          Alert.alert(\"Please enter credentials\")\n        }\n\n        else if(!password) {\n          Alert.alert(\"Please enter credentials\")\n        }\n\n        else  {\n          //Log user here\n          Login(userName, password);\n        }\n\n\n\n      }}/>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ecf0f1',\n  },\n  input: {\n    width: 200,\n    height: 44,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: 'black',\n    marginBottom: 10,\n  },\n});\n\nexport default LoginView;\n"]},"metadata":{},"sourceType":"module"}