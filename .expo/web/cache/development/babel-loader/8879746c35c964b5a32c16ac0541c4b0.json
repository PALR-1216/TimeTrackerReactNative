{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useEffect, useState, useCallback, useContext } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { AntDesign } from '@expo/vector-icons';\nimport LoginView from \"./LoginView\";\nimport HomePageView from \"./HomePageView\";\nimport ProfileView from \"./ProfileView\";\nimport CustomDrawer from \"../Components/CustomDrawer\";\nimport { AuthContext } from \"../context/authContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Drawer = createDrawerNavigator();\n\nvar DrawerRoutes = function DrawerRoutes() {\n  return _jsx(Drawer.Navigator, {\n    initialRouteName: \"Home\",\n    children: _jsx(Drawer.Screen, {\n      name: \"Home\",\n      component: HomePageView\n    })\n  });\n};\n\nvar Navigation = function Navigation() {\n  var _useContext = useContext(AuthContext),\n      userName = _useContext.userName,\n      userId = _useContext.userId,\n      CheckIfUserIsLoggedIn = _useContext.CheckIfUserIsLoggedIn,\n      LogOut = _useContext.LogOut;\n\n  CheckIfUserIsLoggedIn();\n\n  if (userId) {\n    return _jsx(NavigationContainer, {\n      children: _jsx(Drawer.Navigator, {\n        initialRouteName: \"Home\",\n        drawerContent: function drawerContent(props) {\n          return _jsx(CustomDrawer, _objectSpread({}, props));\n        },\n        screenOptions: {\n          headerShown: true,\n          drawerLabelStyle: {\n            marginLeft: -15\n          }\n        },\n        children: _jsx(Drawer.Screen, {\n          name: \"Home\",\n          component: HomePageView,\n          options: {\n            title: \"Home\",\n            headerTitleStyle: {\n              fontSize: 23,\n              fontWeight: 'bold'\n            },\n            drawerIcon: function drawerIcon() {\n              return _jsx(AntDesign, {\n                name: \"home\",\n                size: 25,\n                color: \"black\"\n              });\n            }\n          }\n        })\n      })\n    });\n  } else {\n    return _jsx(NavigationContainer, {\n      children: _jsx(Stack.Navigator, {\n        children: _jsx(Stack.Screen, {\n          name: \"Login\",\n          component: LoginView,\n          options: {\n            headerShown: false\n          }\n        })\n      })\n    });\n  }\n};\n\nexport default Navigation;","map":{"version":3,"sources":["C:/Users/palr1/OneDrive/Documents/GitHub/TimeTrackerReactNative/Screens/Navigation.js"],"names":["React","useEffect","useState","useCallback","useContext","NavigationContainer","createNativeStackNavigator","createDrawerNavigator","AntDesign","LoginView","HomePageView","ProfileView","CustomDrawer","AuthContext","Stack","Drawer","DrawerRoutes","Navigation","userName","userId","CheckIfUserIsLoggedIn","LogOut","props","headerShown","drawerLabelStyle","marginLeft","title","headerTitleStyle","fontSize","fontWeight","drawerIcon"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,EAAkDC,UAAlD,QAAoE,OAApE;;;;AAGA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,OAAOC,SAAP;AACA,OAAOC,YAAP;AACA,OAAOC,WAAP;AACA,OAAOC,YAAP;AAEA,SAASC,WAAT;;AAEA,IAAMC,KAAK,GAAGR,0BAA0B,EAAxC;AACA,IAAMS,MAAM,GAAGR,qBAAqB,EAApC;;AAIA,IAAMS,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,SACE,KAAC,MAAD,CAAQ,SAAR;AAAkB,IAAA,gBAAgB,EAAC,MAAnC;AAAA,cACE,KAAC,MAAD,CAAQ,MAAR;AAAe,MAAA,IAAI,EAAC,MAApB;AAA2B,MAAA,SAAS,EAAEN;AAAtC;AADF,IADF;AAOD,CARD;;AAWA,IAAMO,UAAU,GAAG,SAAbA,UAAa,GAAM;AAEvB,oBAA4Db,UAAU,CAACS,WAAD,CAAtE;AAAA,MAAQK,QAAR,eAAQA,QAAR;AAAA,MAAkBC,MAAlB,eAAkBA,MAAlB;AAAA,MAA0BC,qBAA1B,eAA0BA,qBAA1B;AAAA,MAAiDC,MAAjD,eAAiDA,MAAjD;;AAEAD,EAAAA,qBAAqB;;AAKrB,MAAID,MAAJ,EAAY;AACV,WACE,KAAC,mBAAD;AAAA,gBACE,KAAC,MAAD,CAAQ,SAAR;AAAkB,QAAA,gBAAgB,EAAC,MAAnC;AAA0C,QAAA,aAAa,EAAE,uBAAAG,KAAK;AAAA,iBAAI,KAAC,YAAD,oBAAkBA,KAAlB,EAAJ;AAAA,SAA9D;AAA+F,QAAA,aAAa,EAAE;AAAEC,UAAAA,WAAW,EAAE,IAAf;AAAqBC,UAAAA,gBAAgB,EAAE;AAAEC,YAAAA,UAAU,EAAE,CAAC;AAAf;AAAvC,SAA9G;AAAA,kBAEE,KAAC,MAAD,CAAQ,MAAR;AAAe,UAAA,IAAI,EAAC,MAApB;AAA2B,UAAA,SAAS,EAAEf,YAAtC;AAAoD,UAAA,OAAO,EAAE;AAC3DgB,YAAAA,KAAK,QADsD;AAC5CC,YAAAA,gBAAgB,EAAE;AAAEC,cAAAA,QAAQ,EAAE,EAAZ;AAAgBC,cAAAA,UAAU,EAAE;AAA5B,aAD0B;AACYC,YAAAA,UAAU,EAAE;AAAA,qBACjF,KAAC,SAAD;AAAW,gBAAA,IAAI,EAAC,MAAhB;AAAuB,gBAAA,IAAI,EAAE,EAA7B;AAAiC,gBAAA,KAAK,EAAC;AAAvC,gBADiF;AAAA;AADxB;AAA7D;AAFF;AADF,MADF;AAuBD,GAxBD,MA0BK;AACH,WACE,KAAC,mBAAD;AAAA,gBACE,KAAC,KAAD,CAAO,SAAP;AAAA,kBAEE,KAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,OAAnB;AAA2B,UAAA,SAAS,EAAErB,SAAtC;AAAiD,UAAA,OAAO,EAAE;AAAEc,YAAAA,WAAW,EAAE;AAAf;AAA1D;AAFF;AADF,MADF;AASD;AAoCF,CAjFD;;AAmFA,eAAeN,UAAf","sourcesContent":["import React, { useEffect, useState, useCallback, useContext } from 'react';\r\nimport { Button, Text, View } from 'react-native';\r\n\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { AntDesign } from '@expo/vector-icons';\r\n\r\nimport LoginView from './LoginView';\r\nimport HomePageView from './HomePageView';\r\nimport ProfileView from './ProfileView'\r\nimport CustomDrawer from '../Components/CustomDrawer';\r\n\r\nimport { AuthContext } from '../context/authContext'\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Drawer = createDrawerNavigator();\r\n\r\n\r\n\r\nconst DrawerRoutes = () => {\r\n  return (\r\n    <Drawer.Navigator initialRouteName='Home'>\r\n      <Drawer.Screen name='Home' component={HomePageView} />\r\n      {/* <Drawer.Screen name=\"ProfileView\" component={ProfileView} /> */}\r\n\r\n    </Drawer.Navigator>\r\n  );\r\n}\r\n\r\n\r\nconst Navigation = () => {\r\n\r\n  const { userName, userId, CheckIfUserIsLoggedIn, LogOut } = useContext(AuthContext)\r\n\r\n  CheckIfUserIsLoggedIn()\r\n  // console.log(userId)\r\n\r\n\r\n\r\n  if (userId) {\r\n    return (\r\n      <NavigationContainer>\r\n        <Drawer.Navigator initialRouteName='Home' drawerContent={props => <CustomDrawer {...props} />} screenOptions={{ headerShown: true, drawerLabelStyle: { marginLeft: -15 } }}>\r\n\r\n          <Drawer.Screen name='Home' component={HomePageView} options={{\r\n            title: `Home`, headerTitleStyle: { fontSize: 23, fontWeight: 'bold' }, drawerIcon: () => (\r\n              <AntDesign name=\"home\" size={25} color=\"black\" />\r\n\r\n            )\r\n          }} />\r\n          \r\n          \r\n         \r\n\r\n        </Drawer.Navigator>\r\n\r\n      </NavigationContainer>\r\n\r\n\r\n\r\n\r\n    );\r\n\r\n  }\r\n\r\n  else {\r\n    return (\r\n      <NavigationContainer>\r\n        <Stack.Navigator>\r\n\r\n          <Stack.Screen name='Login' component={LoginView} options={{ headerShown: false }} />\r\n\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    )\r\n  }\r\n\r\n\r\n  // return(\r\n  //   <NavigationContainer>\r\n  //   <Stack.Navigator>\r\n\r\n\r\n\r\n  //   {userId ? (\r\n\r\n  //     <Stack.Screen name='Home' component={HomePageView} options={{title: `Welcome ${userName}`, headerLargeTitle:true}} />\r\n  //   ) : (\r\n\r\n  //     <Stack.Screen name='Login' component={LoginView} options={{headerShown:false}}/>\r\n  //   )}\r\n\r\n\r\n  //   </Stack.Navigator>\r\n\r\n  //   </NavigationContainer>\r\n\r\n  // );\r\n\r\n\r\n  // <NavigationContainer>\r\n  // <Stack.Navigator>\r\n\r\n  //   <Stack.Screen name='Home' component={DrawerRoutes} options={{}} />\r\n\r\n\r\n\r\n  // </Stack.Navigator>\r\n  // </NavigationContainer>\r\n\r\n\r\n}\r\n\r\nexport default Navigation;"]},"metadata":{},"sourceType":"module"}