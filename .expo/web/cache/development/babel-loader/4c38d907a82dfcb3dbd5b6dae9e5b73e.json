{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useReducer, useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar API_URL = 'https://myworktimetracker.herokuapp.com';\nexport var AuthContext = createContext();\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userInfo = _useState4[0],\n      setUserInfo = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userId = _useState6[0],\n      setUserId = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      userName = _useState8[0],\n      setUserName = _useState8[1];\n\n  var Login = function Login(userName, password) {\n    setLoading(true);\n    var payload = {\n      userName: userName,\n      password: password\n    };\n    fetch(API_URL + \"/apilogin\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    }).then(function () {\n      var _ref2 = _asyncToGenerator(function* (res) {\n        try {\n          var jsonRes = yield res.json();\n          var obj;\n\n          for (i in jsonRes) {\n            obj = {\n              id: jsonRes[i].userId,\n              userName: jsonRes[i].userName,\n              userEmail: jsonRes[i].userEmail,\n              usersWage: jsonRes[i].usersWage,\n              usersDeduction: jsonRes[i].usersDeduction,\n              usersOvertime: jsonRes[i].usersOvertime\n            };\n          }\n\n          console.log(obj);\n          AsyncStorage.setItem('userId', JSON.stringify(obj.id));\n          AsyncStorage.setItem('userName', obj.userName);\n          setUserInfo(obj);\n          setLoading(false);\n        } catch (e) {\n          console.log(e.message);\n          setLoading(false);\n        }\n      });\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  };\n\n  var LogOut = function LogOut() {\n    try {\n      setLoading(true);\n      AsyncStorage.removeItem('userInfo');\n      AsyncStorage.removeItem('userId');\n      AsyncStorage.removeItem('userName');\n      setUserInfo({});\n      setLoading(false);\n      console.log(\"User has been logged off\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  var CheckIfUserIsLoggedIn = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var jsonValue = yield AsyncStorage.getItem('userId');\n        var name = yield AsyncStorage.getItem('userName');\n        setUserId(jsonValue);\n        setUserName(name);\n      } catch (e) {}\n    });\n\n    return function CheckIfUserIsLoggedIn() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return _jsx(AuthContext.Provider, {\n    value: {\n      isLoading: isLoading,\n      userInfo: userInfo,\n      userId: userId,\n      userName: userName,\n      Login: Login,\n      LogOut: LogOut,\n      CheckIfUserIsLoggedIn: CheckIfUserIsLoggedIn\n    },\n    children: children\n  });\n};","map":{"version":3,"sources":["/Users/pedroalejandro/Desktop/TimeTrackerReactNative/context/authContext.js"],"names":["React","createContext","useReducer","useState","AsyncStorage","API_URL","AuthContext","AuthProvider","children","isLoading","setLoading","userInfo","setUserInfo","userId","setUserId","userName","setUserName","Login","password","payload","fetch","method","headers","body","JSON","stringify","then","res","jsonRes","json","obj","i","id","userEmail","usersWage","usersDeduction","usersOvertime","console","log","setItem","e","message","LogOut","removeItem","error","CheckIfUserIsLoggedIn","jsonValue","getItem","name"],"mappings":"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","sourcesContent":["import React, {createContext, useReducer, useState} from 'react';\n// import BASE_URL from '../src/config'\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nconst API_URL = 'https://myworktimetracker.herokuapp.com'\n\nexport const AuthContext = createContext();\n\n\nexport const AuthProvider = ({children}) =>{\n\n  const [isLoading, setLoading] = useState(false);\n  const [userInfo, setUserInfo] = useState({});\n  const [userId, setUserId] = useState({})\n  const [userName, setUserName] = useState('')\n\n\n  const Login = (userName, password) => {\n    setLoading(true)\n\n    const payload = {\n      userName:userName,\n      password:password\n    }\n\n   fetch(`${API_URL}/apilogin`, {\n     method:\"POST\",\n     headers:{\n       'Content-Type': 'application/json',\n     },\n     body:JSON.stringify(payload)\n   })\n   .then(async res =>{\n     try{\n       let jsonRes = await res.json()\n       let obj;\n\n       for(i in jsonRes) {\n         obj ={\n           id:jsonRes[i].userId,\n           userName:jsonRes[i].userName,\n           userEmail:jsonRes[i].userEmail,\n           usersWage:jsonRes[i].usersWage,\n           usersDeduction:jsonRes[i].usersDeduction,\n           usersOvertime:jsonRes[i].usersOvertime\n         }\n       }\n       console.log(obj)\n      //  AsyncStorage.setItem('userInfo', JSON.stringify(jsonRes))\n       AsyncStorage.setItem('userId', JSON.stringify(obj.id))\n       AsyncStorage.setItem('userName', obj.userName)\n       setUserInfo(obj)\n\n       \n       setLoading(false)\n\n     }catch(e) {\n       console.log(e.message)\n       setLoading(false)\n     }\n   })\n\n  }\n\n  const LogOut = () =>{\n    //logout function in api in my website\n    try {\n      setLoading(true)\n      AsyncStorage.removeItem('userInfo')\n      AsyncStorage.removeItem('userId')\n      AsyncStorage.removeItem('userName')\n      setUserInfo({})\n      setLoading(false)\n      console.log(\"User has been logged off\")\n      \n    } catch (error) {\n      console.log(error.message)\n      \n    }\n  }\n\n\n  const CheckIfUserIsLoggedIn = async() =>{\n    try {\n      const jsonValue = await AsyncStorage.getItem('userId')\n      const name = await AsyncStorage.getItem('userName')\n      setUserId(jsonValue)\n      setUserName(name)\n      \n      // return jsonValue != null ? JSON.parse(jsonValue) : null\n    } catch(e) {\n      // read error\n    }\n  }\n  \n\n\n  return(\n    <AuthContext.Provider  value={{\n      isLoading,\n      userInfo,\n      userId,\n      userName,\n      Login,\n      LogOut,\n      CheckIfUserIsLoggedIn\n      \n      \n    }} >{children}</AuthContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}