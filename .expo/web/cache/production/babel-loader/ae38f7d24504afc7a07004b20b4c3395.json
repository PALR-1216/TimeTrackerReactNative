{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import{StatusBar}from'expo-status-bar';import React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import TextInput from\"react-native-web/dist/exports/TextInput\";import View from\"react-native-web/dist/exports/View\";import Button from\"react-native-web/dist/exports/Button\";import Alert from\"react-native-web/dist/exports/Alert\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var API_URL='https://myworktimetracker.herokuapp.com';var App=function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={username:'',password:'',isLogin:false};return _this;}_createClass(App,[{key:\"onLogin\",value:function onLogin(){var _this2=this;var _this$state=this.state,username=_this$state.username,password=_this$state.password;if(!username){Alert.alert(\"please enter Credentials\");}else if(!password){Alert.alert(\"Please enter Credentials\");}else{var payLoad={userName:username,password:password};fetch(API_URL+\"/Apilogin\",{method:\"POST\",headers:{'Content-Type':'application/json'},body:JSON.stringify(payLoad)}).then(function(){var _ref=_asyncToGenerator(function*(res){try{var jsonRes=yield res.json();_this2.setState({isLogin:true});Alert.alert(\"User \"+jsonRes[0].userName+\" Found\");}catch(error){Alert.alert(\"User was not found\");}});return function(_x){return _ref.apply(this,arguments);};}());}}},{key:\"render\",value:function render(){var _this3=this;return _jsxs(View,{style:styles.container,children:[_jsx(StatusBar,{hidden:true}),_jsx(TextInput,{value:this.state.username,onChangeText:function onChangeText(username){return _this3.setState({username:username});},placeholder:'Username',style:styles.input}),_jsx(TextInput,{value:this.state.password,secureTextEntry:true,onChangeText:function onChangeText(password){return _this3.setState({password:password});},placeholder:'Password',style:styles.input}),_jsx(Button,{title:'Login',style:styles.input,onPress:this.onLogin.bind(this)})]});}}]);return App;}(React.Component);export{App as default};var styles=StyleSheet.create({container:{flex:1,alignItems:'center',justifyContent:'center',backgroundColor:'#ecf0f1'},input:{width:200,height:44,padding:10,borderWidth:1,borderColor:'black',marginBottom:10}});","map":{"version":3,"sources":["/Users/pedroalejandro/Desktop/TimeTrackerReactNative/App.js"],"names":["StatusBar","React","API_URL","App","props","state","username","password","isLogin","Alert","alert","payLoad","userName","fetch","method","headers","body","JSON","stringify","then","res","jsonRes","json","setState","error","styles","container","input","onLogin","bind","Component","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","width","height","padding","borderWidth","borderColor","marginBottom"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, TextInput, View, Button , Alert} from 'react-native';\nconst API_URL = 'https://myworktimetracker.herokuapp.com'\n\n\nexport default class App extends React.Component{\n  constructor(props) {\n    super(props)\n    this.state = {\n      username:'',\n      password:'',\n      isLogin:false\n    }\n  }\n\n  onLogin () {\n    const{username,password} = this.state\n\n    if(!username) {\n      Alert.alert(\"please enter Credentials\")\n    }\n\n    // Alert.alert('Credentials', `${username} + ${password}`);\n\n    else if(!password) {\n      Alert.alert(\"Please enter Credentials\")\n    }\n\n    else {\n      const payLoad = {\n        userName:username,\n        password:password\n      }\n\n      // Alert.alert(`username ${username} password ${password}`)\n      \n      fetch(`${API_URL}/Apilogin`,{\n        method:\"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n      },\n\n      body:JSON.stringify(payLoad)\n      })\n      .then(async res =>{\n        try{\n          let jsonRes = await res.json()\n          // console.log(jsonRes)\n          this.setState({isLogin:true})\n          Alert.alert(`User ${jsonRes[0].userName} Found`)\n\n        }catch(error) {\n          Alert.alert(`User was not found`)\n        }\n      })\n    }\n  }\n\n  \n  render() {\n    return(\n      <View style={styles.container}>\n        <StatusBar hidden={true}/>\n        <TextInput\n        value={this.state.username}\n        onChangeText={(username) => this.setState({username})}\n        placeholder={'Username'}\n        style={styles.input}\n        \n        />\n\n      <TextInput\n        value={this.state.password}\n        secureTextEntry={true}\n        onChangeText={(password) => this.setState({password})}\n        placeholder={'Password'}\n        style={styles.input}\n        \n        />\n\n          <Button\n          title={'Login'}\n          style={styles.input}\n          onPress={this.onLogin.bind(this)}\n            \n\n        />\n      </View>\n    )\n\n  }\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ecf0f1',\n  },\n  input: {\n    width: 200,\n    height: 44,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: 'black',\n    marginBottom: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}